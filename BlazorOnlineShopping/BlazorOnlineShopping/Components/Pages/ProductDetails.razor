@page "/productdetails/{ProductId:int}"
@using BlazorOnlineShopping.CollectionData
@inject ILocalStorageService localStorage
@inject ProductInventory ProductInventory
@inject ShoppingCart ShoppingCart
@rendermode InteractiveServer

<NavLink href="/" class="nav-link">Home</NavLink>
<NavLink href="/cart" class="nav-link">Varukorg</NavLink>

@if (product != null)
{
    <h2>@product.Name</h2>
    <img src="@product.ImageUrl" alt="Produktbild" />
    <p>Pris: @product.Price kr</p>
    <p>@product.Description</p>
    <button @onclick="() => AddToCart(product)">Lägg i varukorg</button>
}
else
{
    <p>Produkten hittades inte.</p>
}

@code 
{
    [Parameter]
    public int ProductId { get; set; }

    public Product product;

    protected override async Task OnInitializedAsync()
    {
        product = ProductInventory.Products.FirstOrDefault(p => p.ProductId == ProductId);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var cartList = await localStorage.GetItemAsync<List<Product>>("ShoppingCart");
            if (cartList is not null)
            {

            }

        }
    }

    public async Task AddToCart(Product product)
    {          
        ShoppingCart.AddToCart(product);
        await localStorage.SetItemAsync("ShoppingCart", ShoppingCart.Cart);
    }
}
